services:
  postgres:
    container_name: nextcloud-postgres
    image: pgautoupgrade/pgautoupgrade:latest
    restart: always
    environment:
      NEXTCLOUD_DATA_DIR: ${NEXTCLOUD_DATA_DIR}
    env_file:
      - .env
    volumes:
      - nextcloud-postgres-data:/var/lib/postgresql/data
      - nextcloud-data:${NEXTCLOUD_DATA_DIR}:z

  redis:
    container_name: nextcloud-redis
    image: redis:latest
    restart: always

  nextcloud:
    container_name: nextcloud
    hostname: ${NEXTCLOUD_HOSTNAME}
    image: nextcloud:latest
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      NEXTCLOUD_DATA_DIR: ${NEXTCLOUD_DATA_DIR}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_HOSTNAME}
      PHP_MEMORY_LIMIT: 1024M
    env_file:
      - .env
      - /opt/containers/env_files/email.env
    labels:
      traefik.docker.network: proxy
      traefik.enable: "true"
      traefik.http.routers.nextcloud-secure.entrypoints: websecure
      traefik.http.routers.nextcloud-secure.middlewares: default@file
      traefik.http.routers.nextcloud-secure.rule: Host(`${NEXTCLOUD_HOSTNAME}`)
      traefik.http.routers.nextcloud-secure.service: nextcloud
      traefik.http.routers.nextcloud-secure.tls: "true"
      traefik.http.routers.nextcloud-secure.tls.certresolver: http_resolver
      traefik.http.routers.nextcloud.entrypoints: web
      traefik.http.routers.nextcloud.rule: Host(`${NEXTCLOUD_HOSTNAME}`)
      traefik.http.services.nextcloud.loadbalancer.server.port: "80"
      com.centurylinklabs.watchtower.lifecycle.post-update: |
        /bin/sh -c 'su -s /bin/sh www-data -c "
        php occ upgrade &&
        php occ maintenance:repair --include-expensive &&
        php occ maintenance:mode --off &&
        php occ db:add-missing-indices
        "'
    networks:
      default: null
      proxy: null
    volumes:
      - nextcloud-php:/var/www/html:z
      - nextcloud-data:${NEXTCLOUD_DATA_DIR}:z
      - /etc/localtime:/etc/localtime:ro

  cron:
    container_name: nextcloud-cron
    hostname: ${NEXTCLOUD_HOSTNAME}
    image: nextcloud:latest
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      NEXTCLOUD_DATA_DIR: ${NEXTCLOUD_DATA_DIR}
      PHP_MEMORY_LIMIT: 1024M
    entrypoint: /cron.sh
    env_file:
      - .env
    volumes:
      - nextcloud-php:/var/www/html:z
      - nextcloud-data:${NEXTCLOUD_DATA_DIR}:z
      - /etc/localtime:/etc/localtime:ro

networks:
  default:
  proxy:
    external: true

volumes:
  nextcloud-postgres-data:
    driver: local
  nextcloud-postgres-dump:
    driver: local
  nextcloud-php:
    driver: local
  nextcloud-data:
    # name: nextcloud-data
    # external: true

    driver: local
    driver_opts:
      type: cifs
      o: "username=${CIFS_HETZNER_NEXTCLOUD_DATA_USERNAME},password=${CIFS_HETZNER_NEXTCLOUD_DATA_PASSWORD},uid=33,gid=33,dir_mode=0770,file_mode=0770"
      device: "${CIFS_HETZNER_NEXTCLOUD_DATA_DEVICE}"
